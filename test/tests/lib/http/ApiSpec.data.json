{
  "apis": [
    {
      "name": "http.apis.GetApiSpec",
      "method": "GET",
      "path": "/",
      "description": "Get the API specification.",
      "responses": [
        "http.responses.ApiSpecReturned"
      ]
    },
    {
      "name": "myapp.apis.AutoPath",
      "method": "GET",
      "path": "/myapp/auto-path",
      "description": "Description not available."
    },
    {
      "name": "myapp.apis.CheckIn",
      "method": "POST",
      "path": "/check-ins",
      "description": "Check-in your location.",
      "request": {
        "parameters": [
          {
            "spec": "<userId>",
            "type": "string",
            "source": "form"
          },
          {
            "spec": "<location>",
            "type": "myapp.apis.CheckIn.Request.Location",
            "source": "form"
          }
        ]
      },
      "responses": [
        "myapp.responses.CheckInRecorded",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "myapp.apis.GetBlob",
      "method": "POST",
      "path": "/blobs",
      "description": "Get the blob!",
      "request": {
        "parameters": [
          {
            "spec": "[content]",
            "type": "string",
            "description": "The blob content in Base64."
          }
        ]
      },
      "responses": [
        "myapp.responses.BlobReturned",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "myapp.apis.Hello",
      "method": "GET",
      "path": "/hello",
      "description": "Say Hello!",
      "request": {
        "parameters": [
          {
            "spec": "<name>",
            "type": "string",
            "description": "The person's name.",
            "source": "query"
          },
          {
            "spec": "[title]",
            "type": "string",
            "description": "The person's title.",
            "source": "query"
          },
          {
            "spec": "opt1",
            "type": "string",
            "constraints": [
              {
                "type": "choice",
                "code": "error.invalid_choice",
                "message": "The %{property.kind} '%{property.name}' is assigned to an invalid value '%{value}'. (Allowed: %{constraint.choiceValues.slice (0, 10).join (', ') + (constraint.choiceValues.length > 10 ? '...' : '')})",
                "options": {
                  "choices": [
                    "val1",
                    "val2"
                  ]
                }
              }
            ]
          },
          {
            "spec": "opt2",
            "type": "string",
            "constraints": [
              {
                "type": "myapp:unique",
                "code": "error.not_unique",
                "message": "The valid '%{value}' is not unique."
              }
            ]
          },
          {
            "spec": "opt3",
            "type": "string",
            "constraints": [
              {
                "type": "myapp:email",
                "code": "error.invalid_email_format",
                "message": "The email address '%{value}' is invalid."
              }
            ]
          },
          {
            "spec": "opt4",
            "type": "string",
            "constraints": [
              {
                "type": "choice",
                "code": "error.invalid_choice",
                "message": "The %{property.kind} '%{property.name}' is assigned to an invalid value '%{value}'. (Allowed: %{constraint.choiceValues.slice (0, 10).join (', ') + (constraint.choiceValues.length > 10 ? '...' : '')})",
                "condition": "nit.is.not.empty (opt2)",
                "options": {
                  "choices": [
                    "val4-1",
                    "val4-2"
                  ]
                }
              }
            ]
          },
          {
            "spec": "opt5",
            "type": "integer"
          },
          {
            "spec": "opt6...",
            "type": "string*"
          }
        ]
      },
      "responses": [
        "myapp.responses.HelloMessageReturned",
        "http.responses.ValidationFailed"
      ]
    }
  ],
  "responses": [
    {
      "name": "http.responses.ApiSpecReturned",
      "status": 200,
      "message": "The API spec has been returned.",
      "fields": [
        {
          "spec": "<spec>",
          "type": "http.ApiSpec"
        }
      ]
    },
    {
      "name": "http.responses.ValidationFailed",
      "status": 400,
      "message": "One or more parameters are invalid.",
      "code": "error.model_validation_failed",
      "fields": [
        {
          "spec": "<violations...>",
          "type": "http.responses.ValidationFailed.Violation",
          "description": "The validation violations."
        }
      ]
    },
    {
      "name": "myapp.responses.BlobReturned",
      "status": 200,
      "message": "The blob has been returned.",
      "fields": [
        {
          "spec": "<content>",
          "type": "any"
        }
      ]
    },
    {
      "name": "myapp.responses.CheckInRecorded",
      "status": 201,
      "message": "The check-in info has been recorded."
    },
    {
      "name": "myapp.responses.HelloMessageReturned",
      "status": 200,
      "message": "The hello message has been returned.",
      "fields": [
        {
          "spec": "<message>",
          "type": "string"
        }
      ]
    }
  ],
  "models": [
    {
      "name": "http.ApiSpec",
      "fields": [
        {
          "spec": "apis...",
          "type": "http.ApiSpec.Api"
        },
        {
          "spec": "responses...",
          "type": "http.ApiSpec.Response"
        },
        {
          "spec": "models...",
          "type": "http.ApiSpec.Model"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Api",
      "fields": [
        {
          "spec": "<name>",
          "type": "string"
        },
        {
          "spec": "[method]",
          "type": "string?"
        },
        {
          "spec": "[path]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "request",
          "type": "http.ApiSpec.Request?"
        },
        {
          "spec": "responses...",
          "type": "string?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Constraint",
      "fields": [
        {
          "spec": "<type>",
          "type": "string"
        },
        {
          "spec": "[code]",
          "type": "string"
        },
        {
          "spec": "[message]",
          "type": "string"
        },
        {
          "spec": "name",
          "type": "string?"
        },
        {
          "spec": "condition",
          "type": "string?"
        },
        {
          "spec": "options",
          "type": "object?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Field",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "constraints...",
          "type": "http.ApiSpec.Constraint?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Model",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The model name."
        },
        {
          "spec": "fields...",
          "type": "http.ApiSpec.Field?",
          "description": "The model fields."
        }
      ]
    },
    {
      "name": "http.ApiSpec.Parameter",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "label",
          "type": "string?"
        },
        {
          "spec": "source",
          "type": "string?"
        },
        {
          "spec": "constraints...",
          "type": "http.ApiSpec.Constraint?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Request",
      "fields": [
        {
          "spec": "parameters...",
          "type": "http.ApiSpec.Parameter?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Response",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The response name."
        },
        {
          "spec": "<status>",
          "type": "integer",
          "description": "The response status code."
        },
        {
          "spec": "[message]",
          "type": "string?",
          "description": "The response status message."
        },
        {
          "spec": "[code]",
          "type": "string?",
          "description": "The error code that the response represents."
        },
        {
          "spec": "fields...",
          "type": "http.ApiSpec.Field?",
          "description": "The response fields."
        }
      ]
    },
    {
      "name": "http.responses.ValidationFailed.Violation",
      "fields": [
        {
          "spec": "field",
          "type": "string",
          "description": "The field that failed the validation."
        },
        {
          "spec": "constraint",
          "type": "string",
          "description": "The constraint that caused error."
        },
        {
          "spec": "code",
          "type": "string",
          "description": "The error code."
        },
        {
          "spec": "message",
          "type": "string",
          "description": "The error message."
        }
      ]
    },
    {
      "name": "myapp.apis.CheckIn.Request.Location",
      "fields": [
        {
          "spec": "<latitude>",
          "type": "number"
        },
        {
          "spec": "<longitude>",
          "type": "number"
        }
      ]
    }
  ]
}